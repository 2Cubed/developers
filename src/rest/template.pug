include ./resource.pug
.row
    .col-md-9(role='main')
        .page-header
            p Beam provides an HTTP API that can be used either with cookies or #[a(href='/reference/oauth/index.html') OAuth]. The base API URL is #[code https://beam.pro/api/v1], and all paths listed here are appended to that.

            .alert.alert-info If you want some more help about talking to our REST API, check out our #[a(href='/tutorials/rest.html') REST Tutorial].

        h3 Side note: REST APIs

        include ../tutorials/rest_intro.pug

        p If you want some more information about talking to our REST API, check out our #[a(href='/tutorials/rest.html') REST Tutorial].
        h2 Rate Limiting
        p.
            In order to garantuee API stability there are a few rate limits in place,
            all endpoints that are rate limited have their #[code bucket] noted below.
        p Here is a list of all rate limiting buckets and their attributes.
        table.table.table-condensed
            caption Each endpoint can be called #[code Request Count] times per #[code Time Interval].
            thead
                tr
                    th Name
                    th Request Count
                    th Time Interval (in Seconds)
            tbody
                - orderered = orderObject(beConfig.ratelimit.buckets)
                for bucket, name in orderered
                    tr
                        td= name
                        td= bucket.max
                        td= bucket.interval/1000

        include ../snippets/help.pug
        h2 Endpoints
        for resource in rest.resources
            .panel.panel-default.panel-rest
                a(name=resource.uniqueId id=resource.uniqueId)
                a.panel-reference.icon.icon-link-1(href=`#${resource.uniqueId}`)
                .panel-heading
                    h3.panel-title= resource.displayName || resource.relativeUri
                .panel-body
                    if resource.description
                        .top-resource-description!= marked(resource.description)
                    .panel-group
                        +resourceModals(resource)
                        table(style='width:100%')
                            tbody
                                +resourceRows(resource)

        h2 Models &amp; Types
        for type, name in rest.types
            .panel.panel-default.panel-rest
                a(name=name id=name)
                a.panel-reference.icon.icon-link-1(href=`#${name}`)
                .panel-heading
                    h3.panel-title= type.displayName
                        - var parentType = type.type && type.type[0];
                        if parentType && !restUtil.isBaseType(parentType)
                            = ' '
                            small extends
                                = ' '
                                a(href=`#${parentType}`)= parentType
                .panel-body
                    +typeDetails(name)

    .col-md-3
        .hidden-print.rest-sidebar(role='complementary' style='padding:1px')
            h3 Endpoints
            nav
                ul.nav.nav-stacked
                    for r in rest.resources
                        li: a(href=`#${r.uniqueId}`)= r.relativeUri
